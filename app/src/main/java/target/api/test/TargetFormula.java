/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package target.api.test;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;
// import com.fasterxml.jackson.databind.ObjectMapper;
// import com.fasterxml.jackson.*;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParser;
import com.google.gson.JsonElement;
import java.util.Map;
// import java.util.LinkedHashMap;
import java.util.HashMap;
import java.util.ArrayList;
import org.checkerframework.checker.units.qual.s;

// import com.fasterxml.jackson.databind.ObjectMapper;
// import com.fasterxml.jackson.*;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParser;
import com.google.gson.JsonElement;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.core.type.TypeReference;
// import jackson.databind.ObjectMapper;

class TargetFormula {

	public static void main(String[] args) throws IOException {
		URL url = new URL("https://redsky.target.com/redsky_aggregations/v1/web/plp_search_v1?key=9f36aeafbe60771e321a7cc95a78140772ab3e96&category=5xtkh&channel=WEB&count=24&default_purchasability_filter=true&include_sponsored=true&offset=0&page=%2Fc%2F5xtkh&platform=desktop&pricing_store_id=3286&scheduled_delivery_store_id=2786&store_ids=3286%2C1284%2C3327%2C2786%2C3275&useragent=Mozilla%2F5.0+%28Macintosh%3B+Intel+Mac+OS+X+10_15_7%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F103.0.0.0+Safari%2F537.36&visitor_id=01826F700A4602018F3F027E5F9B6350");
		HttpURLConnection httpConn = (HttpURLConnection) url.openConnection();
		httpConn.setRequestMethod("GET");

		httpConn.setRequestProperty("authority", "redsky.target.com");
		httpConn.setRequestProperty("accept", "application/json");
		httpConn.setRequestProperty("accept-language", "en-US,en;q=0.9");
		httpConn.setRequestProperty("cache-control", "no-cache");
		httpConn.setRequestProperty("cookie", "TealeafAkaSid=E2h63dvGstLLoRGIxLdMqlG0_0a2roLJ; visitorId=01826F700A4602018F3F027E5F9B6350; sapphire=1; UserLocation=98105|47.660|-122.310|WA|US; egsSessionId=39c1b27c-fc14-4a60-b834-8982d103b42b; accessToken=eyJraWQiOiJlYXMyIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiJmNGU2MmJjNi02M2QzLTQ5NDMtOTI0Ni01NTlkZjE5OTlhODEiLCJpc3MiOiJNSTYiLCJleHAiOjE2NTk4MTMzOTAsImlhdCI6MTY1OTcyNjk5MCwianRpIjoiVEdULjZhZmYzZGZiZmYwZDQ1MDQ5NDBkMDBjZjRmNDQ2ZDJlLWwiLCJza3kiOiJlYXMyIiwic3V0IjoiRyIsImRpZCI6Ijg5NDAwZGMwZTBjZWViNzg5NTE1ZjU3ZDgyYWViNDE5OGE0ZTNmNDE0NDVjNzdhYTM3OGYwYTA5YjNkNzRiYjkiLCJzY28iOiJlY29tLm5vbmUsb3BlbmlkIiwiY2xpIjoiZWNvbS13ZWItMS4wLjAiLCJhc2wiOiJMIn0.fGFSerXjemEVsS-KzxcMDfcbj9t1uY_2BKcs9KwDnTG3Sz8lVaHuibZZzsnLczr2PwsVvCLr4LeTLjC8tVsowA5Y9SYwcw_KVDMZEERa2TDNmG0yGlYVw28ThvduOahCLxeNKWzsUgiaJ_tcwn0NW2g-3LsJTiH9jhHRV-dLX_wTwxKDJe-gmnI8Ex2H9CzFKr1zXPVqx-nSHhz9fD_81o-qm8TZc1FU18NSLLbtmfpig38W9LpPLh_bs5-FhiYijC4YLpnDnrPZtAT6qM3kSxm_9Or0OWaGNG4yZvutAthuTDB8MBGaWiHvOWbmbSnn9NT9Ftt9DESdlKh0pFOlJA; idToken=eyJhbGciOiJub25lIn0.eyJzdWIiOiJmNGU2MmJjNi02M2QzLTQ5NDMtOTI0Ni01NTlkZjE5OTlhODEiLCJpc3MiOiJNSTYiLCJleHAiOjE2NTk4MTMzOTAsImlhdCI6MTY1OTcyNjk5MCwiYXNzIjoiTCIsInN1dCI6IkciLCJjbGkiOiJlY29tLXdlYi0xLjAuMCIsInBybyI6eyJmbiI6bnVsbCwiZW0iOm51bGwsInBoIjpmYWxzZSwibGVkIjpudWxsLCJsdHkiOmZhbHNlfX0.; refreshToken=umywYBCg4oj7AXR3RA3ufvoAN6Qie7e88z1BitQ8_5Gg5HFgNDa75pXDr7HostsNAjCxtimm48wlg6NE7Y9qIA; ffsession={%22sessionHash%22:%222467a7f44aea1659726990298%22%2C%22prevPageName%22:%22home%20page%22%2C%22prevPageType%22:%22home%20page%22%2C%22prevPageUrl%22:%22https://www.target.com/%22%2C%22sessionHit%22:1}; __gads=ID=d1f48d571cf9a564:T=1659726990:S=ALNI_MZb2j_Lece8mZxF8GLv_9fkTwSGsw; __gpi=UID=000007a86bf3d88c:T=1659726990:RT=1659726990:S=ALNI_MaUMkfqmFVXSngyNLLwqzbC8_g1PQ; fiatsCookie=DSI_3286|DSN_Seattle%20University%20Way|DSZ_98105; _mitata=YzAxNzhjZTM3ZWIzNzIwMWIzN2ViZmZhY2UxM2QwNzcyNTBkMjY1NWM1Zjk2ZTM5OTVhYmQzNTc4OTJkYzQyNg==_/@#/1659727051_/@#/co0t49VgjlVW4lR9_/@#/MWQ2MGQxNjQ4ZWFkOWNmYjY1MjUyZmJiOTc5NGNiNDljN2Q1Y2UxM2ZiNWJiYmNhZDg2ZjY4MjhjNmZjMTMxMw==_/@#/000; ci_pixmgr=other; _uetsid=1d0f851014f311ed909f89d4f467b489; _uetvid=1d0f98e014f311edac499d08d7d1204a; _gcl_au=1.1.52664867.1659726992");
		httpConn.setRequestProperty("origin", "https://www.target.com");
		httpConn.setRequestProperty("pragma", "no-cache");
		httpConn.setRequestProperty("referer", "https://www.target.com/c/formula-nursing-feeding-baby/-/N-5xtkh?lnk=snav_rd_formula");
		httpConn.setRequestProperty("sec-ch-ua", "\".Not/A)Brand\";v=\"99\", \"Google Chrome\";v=\"103\", \"Chromium\";v=\"103\"");
		httpConn.setRequestProperty("sec-ch-ua-mobile", "?0");
		httpConn.setRequestProperty("sec-ch-ua-platform", "\"macOS\"");
		httpConn.setRequestProperty("sec-fetch-dest", "empty");
		httpConn.setRequestProperty("sec-fetch-mode", "cors");
		httpConn.setRequestProperty("sec-fetch-site", "same-site");
		httpConn.setRequestProperty("user-agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36");

		InputStream responseStream = httpConn.getResponseCode() / 100 == 2
				? httpConn.getInputStream()
				: httpConn.getErrorStream();
		Scanner s = new Scanner(responseStream).useDelimiter("\\A");
		String response = s.hasNext() ? s.next() : "";

		JsonElement jsonElement = new JsonParser().parse(response);
        Gson gson = new GsonBuilder().setPrettyPrinting().create();
        String json = gson.toJson(jsonElement);

		ObjectMapper objectMapper = new ObjectMapper();
		Map<String, Object> jsonMap = objectMapper.readValue(json, new TypeReference<Map<String, Object>>(){});
		Object data = jsonMap.get("data");

		Map<String, Object> dataMap = objectMapper.convertValue(data, Map.class);
		Object search = dataMap.get("search");

		Map<String, Object> searchMap = objectMapper.convertValue(search, Map.class);
		Object products = searchMap.get("products");

		ArrayList<Object> productsAL = objectMapper.convertValue(products, ArrayList.class);
		for (Object product : productsAL) {
			

			Map<String, Object> productMap = objectMapper.convertValue(product, Map.class);

			

			// get title
			Object item = productMap.get("item");
			Map<String, Object> itemMap = objectMapper.convertValue(item, Map.class);
			Object productDescription = itemMap.get("product_description");
			Map<String, Object> productDescriptionMap = objectMapper.convertValue(productDescription, Map.class);
			System.out.println(productDescriptionMap.get("title"));

			// get brand name
			Object brandInfo = itemMap.get("primary_brand");
			Map<String, Object> brandInfoMap = objectMapper.convertValue(brandInfo, Map.class);
			Object brandName = brandInfoMap.get("name");
			System.out.println(brandName);

			// get price
			Object price = productMap.get("price");
			Map<String, Object> priceMap = objectMapper.convertValue(price, Map.class);
			Object curPrice = priceMap.get("formatted_current_price");
			System.out.println(curPrice);

			// get primary image URL
			Object enrichment = itemMap.get("enrichment");
			Map<String, Object> enrichmentMap = objectMapper.convertValue(enrichment, Map.class);
			Object images = enrichmentMap.get("images");
			Map<String, Object> imagesMap = objectMapper.convertValue(images, Map.class);
			Object primaryImage = imagesMap.get("primary_image_url");
			System.out.println(primaryImage);

			System.out.println("----------------------------------------------");
		}
	}
}